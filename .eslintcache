[{"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\index.js":"1","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\App.js":"2","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reportWebVitals.js":"3","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\dashboard\\Dashboard.js":"4","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\private-route\\PrivateRoute.js":"5","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\layout\\Navbar.js":"6","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\MainComponent.js":"7","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OrderTable.js":"8","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OutOfStockTable.js":"9","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\RequestTableRow.js":"10","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\RequestForm.js":"11","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\store.js":"12","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\actions\\ActionsTypes.js":"13","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\index.js":"14","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\authReducer.js":"15","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\errorReducer.js":"16","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\actions\\ActionCreators.js":"17","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\utils\\setAuthToken.js":"18","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\layout\\Landing.js":"19","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\auth\\Register.js":"20","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\auth\\Login.js":"21","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\RequestTable.js":"22","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\StatsComponent.js":"23","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\HeaderComponent.js":"24","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\HomeComponent.js":"25","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\requestsReducer.js":"26","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\LoadingComponent.js":"27","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\NoItemsComponent.js":"28","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\lastIdReducer.js":"29","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\ordersReducer.js":"30","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OrderTableRow.js":"31","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\inStockReducer.js":"32","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\InStockTableRow.js":"33","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\FooterComponent.js":"34","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\PurchaseForm.js":"35","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\InStockTable.js":"36","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OutOfStockTableRow.js":"37","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\outStockReducer.js":"38","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\PdfComponent.js":"39","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditOrderForm.js":"40","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\DeliveredForm.js":"41","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\ImgComponent.js":"42","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditStockForm.js":"43","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\DetailsComponent.js":"44","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditOutOfStockForm.js":"45","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditLocation.js":"46"},{"size":711,"mtime":1613163874883,"results":"47","hashOfConfig":"48"},{"size":1233,"mtime":1613160989246,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1608514499315,"results":"50","hashOfConfig":"48"},{"size":2275,"mtime":1613204708527,"results":"51","hashOfConfig":"48"},{"size":617,"mtime":1612460008224,"results":"52","hashOfConfig":"53"},{"size":3981,"mtime":1612463423397,"results":"54","hashOfConfig":"53"},{"size":2145,"mtime":1612935662703,"results":"55","hashOfConfig":"48"},{"size":2914,"mtime":1613340632522,"results":"56","hashOfConfig":"48"},{"size":2868,"mtime":1613344073510,"results":"57","hashOfConfig":"48"},{"size":1130,"mtime":1613196503395,"results":"58","hashOfConfig":"48"},{"size":8377,"mtime":1613345829703,"results":"59","hashOfConfig":"48"},{"size":465,"mtime":1612457297962,"results":"60","hashOfConfig":"48"},{"size":1450,"mtime":1613408286921,"results":"61","hashOfConfig":"48"},{"size":547,"mtime":1613161394880,"results":"62","hashOfConfig":"48"},{"size":584,"mtime":1612458171446,"results":"63","hashOfConfig":"48"},{"size":278,"mtime":1612458223981,"results":"64","hashOfConfig":"48"},{"size":11351,"mtime":1613412963291,"results":"65","hashOfConfig":"48"},{"size":344,"mtime":1612456835311,"results":"66","hashOfConfig":"48"},{"size":2655,"mtime":1613407935479,"results":"67","hashOfConfig":"48"},{"size":6057,"mtime":1613248381543,"results":"68","hashOfConfig":"48"},{"size":4855,"mtime":1613250935085,"results":"69","hashOfConfig":"48"},{"size":3366,"mtime":1613333678468,"results":"70","hashOfConfig":"48"},{"size":3230,"mtime":1610519508340,"results":"71","hashOfConfig":"48"},{"size":6882,"mtime":1613239339640,"results":"72","hashOfConfig":"48"},{"size":3229,"mtime":1610561743401,"results":"73","hashOfConfig":"48"},{"size":1100,"mtime":1612897465549,"results":"74","hashOfConfig":"48"},{"size":414,"mtime":1612575559161,"results":"75","hashOfConfig":"48"},{"size":355,"mtime":1612804087619,"results":"76","hashOfConfig":"48"},{"size":860,"mtime":1613341713841,"results":"77","hashOfConfig":"48"},{"size":1282,"mtime":1613282380283,"results":"78","hashOfConfig":"48"},{"size":1220,"mtime":1613255622817,"results":"79","hashOfConfig":"48"},{"size":1525,"mtime":1613408452362,"results":"80","hashOfConfig":"48"},{"size":1795,"mtime":1613411439456,"results":"81","hashOfConfig":"48"},{"size":2078,"mtime":1612918053685,"results":"82","hashOfConfig":"48"},{"size":5484,"mtime":1613349702633,"results":"83","hashOfConfig":"48"},{"size":3071,"mtime":1613406566240,"results":"84","hashOfConfig":"48"},{"size":741,"mtime":1613278012438,"results":"85","hashOfConfig":"48"},{"size":871,"mtime":1612934164912,"results":"86","hashOfConfig":"48"},{"size":1857,"mtime":1613195982752,"results":"87","hashOfConfig":"48"},{"size":4262,"mtime":1613194740586,"results":"88","hashOfConfig":"48"},{"size":5868,"mtime":1613408551126,"results":"89","hashOfConfig":"48"},{"size":1856,"mtime":1613197574684,"results":"90","hashOfConfig":"48"},{"size":8610,"mtime":1613415649594,"results":"91","hashOfConfig":"48"},{"size":8185,"mtime":1613425973580,"results":"92","hashOfConfig":"48"},{"size":4090,"mtime":1613350824617,"results":"93","hashOfConfig":"48"},{"size":5418,"mtime":1613408623525,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"4kctrr",{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"685583",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"97"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\index.js",[],["206","207"],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\App.js",["208","209"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { setCurrentUser, logoutUser } from \"./actions/ActionCreators\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";  \r\nimport './App.css';\r\n\r\nimport Main from \"./components/MainComponent\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Main />\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n",["210","211"],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reportWebVitals.js",[],["212","213"],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\dashboard\\Dashboard.js",["214"],"import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/ActionCreators\";\r\n\r\nimport imageUrl from \"../../assets/images/dashboard_background.JPG\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <br/>\r\n                        <br/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-1 col-xs-4\"></div>\r\n                    <div className=\"col-sm-4\">\r\n                        <h2 className=\"text-color-grey\"><b>Hey there,</b> {user.name.split(\" \")[0]}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\"></div>\r\n                    <div className=\"col\">\r\n                        <img src={imageUrl} />\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col-sm-9\">\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col-sm-9 text-center\">\r\n                        <Button outline onClick={this.onLogoutClick}>Logout</Button>\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);\r\n\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\private-route\\PrivateRoute.js",[],["215","216"],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\layout\\Navbar.js",["217"],"import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Jumbotron fluid>\r\n                    <div className=\"container text-white\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <h1>Lab</h1>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <br />\r\n                                <br />\r\n                                <h2>Inventory</h2> \r\n                            </div>\r\n                            <div className=\"col\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Navbar dark sticky=\"top\" expand=\"md\">\r\n                    <div className=\"container justify-content-center\">\r\n                        {/* <NavbarBrand className=\"mr-auto\" href=\"/stats\">\r\n                            <i className=\"fa fa-bar-chart fa-lg\">{' '}Stats</i> \r\n                        </NavbarBrand> */}\r\n                        <NavbarToggler onClick={this.toggleNav} />   \r\n                        <Collapse isOpen={this.state.isNavOpen} navbar className=\"justify-content-center\">\r\n                            <Nav navbar justified className=\"justify-content-center\">                                \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/register\">\r\n                                        <i className=\"fa fa-list-alt fa-lg\">{' '}<span className=\"roboto\">Signup</span></i>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/orders\">\r\n                                        <i className=\"fa fa-truck fa-lg\">{' '}<span className=\"roboto\">------------</span></i>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/login\">\r\n                                        <i className=\"fa fa-folder-open fa-lg\">{' '}<span className=\"roboto\">Login</span></i>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/outofstock\">\r\n                                        <i className=\"fa fa-folder fa-lg\">{' '}<span className=\"roboto\">------------</span></i>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/stats\">\r\n                                        <i className=\"fa fa-bar-chart fa-lg\">{' '}<span className=\"roboto\">---------</span></i>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse> \r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\MainComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OrderTable.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OutOfStockTable.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\RequestTableRow.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\RequestForm.js",["218","219","220","221"],"import React, { Component } from \"react\";\r\nimport { Button, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\n\r\nimport { fetchLastRequest, fetchRequests } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst required = val => val && val.length; \r\nconst maxLength = len => val => !val || (val.length <= len); \r\nconst minLength = len => val => val && (val.length >= len); \r\nconst isNumber = val => !isNaN(+val); \r\nconst isZero = val => val && (+val > 0);\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchRequests: () => (fetchRequests()),\r\n    fetchLastRequest: () => (fetchLastRequest())\r\n};\r\n\r\nclass RequestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            //lastRequest: undefined \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleLastRequest = this.handleLastRequest.bind(this);\r\n    }\r\n    \r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchLastRequest();\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.fetchLastRequest();\r\n\r\n        const lastRequest = this.props.lastId.lastRequest[0];\r\n        //alert(JSON.stringify(lastRequest)); \r\n        const newId = lastRequest.id + 1; \r\n\r\n        const newRequest = {\r\n            id: newId,  \r\n            ...values,\r\n            requestdate: new Date().toISOString(),\r\n            requestuser: this.props.auth.user.name\r\n        };\r\n\r\n        this.props.addRequest(newRequest);\r\n        this.props.fetchRequests();\r\n        this.toggleModal();\r\n\r\n        //alert('Current state is: ' + JSON.stringify(newRequest) );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"text-info\">Add a new Request</span> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}><span className=\"text-info\">New Request</span></ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={ (values) => this.handleSubmit(values) }>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"article\">Article</Label>\r\n                                <Control.text className=\"form-control\" model=\".article\" id=\"article\" name=\"article\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(100)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".article\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 100 characters or less'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"index\">Index</Label>\r\n                                <Control.text className=\"form-control\" model=\".index\" id=\"index\" name=\"index\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(100)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".index\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 100 characters or less'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"quantity\">Quantity</Label>\r\n                                <Control.text className=\"form-control\" model=\".quantity\" id=\"quantity\" name=\"quantity\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(1),\r\n                                            maxLength: maxLength(30),\r\n                                            isNumber,\r\n                                            isZero\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".quantity\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 1',\r\n                                        maxLength: 'Must be 30 characters or less',\r\n                                        isNumber: 'Must be a number',\r\n                                        isZero: 'Must be a valid quantity'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"unitcost\">Unit cost</Label>\r\n                                <Control.text className=\"form-control\" model=\".unitcost\" id=\"unitcost\" name=\"unitcost\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(1),\r\n                                            maxLength: maxLength(30),\r\n                                            isNumber,\r\n                                            isZero \r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".unitcost\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 1 characters',\r\n                                        maxLength: 'Must be 30 characters or less',\r\n                                        isNumber: 'Must be a number',\r\n                                        isZero: 'Must be a valid quantity'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RequestForm));","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\store.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\actions\\ActionsTypes.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\index.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\authReducer.js",["222"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case ActionTypes.USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\errorReducer.js",["223"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_ERRORS: \r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\actions\\ActionCreators.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\utils\\setAuthToken.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\layout\\Landing.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\auth\\Register.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\auth\\Login.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\RequestTable.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\StatsComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\HeaderComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\HomeComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\requestsReducer.js",["224","225","226"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Requests = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        requests: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_REQUESTS:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    requests: action.payload};            \r\n        case ActionTypes.REQUESTS_FAILED:\r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_REQUEST:\r\n            const request = action.payload;\r\n            return {...state, \r\n                    requests: state.requests.concat(request)}; \r\n            break;\r\n        case ActionTypes.DELETE_REQUEST:\r\n            const toDeleteId = action.payload;\r\n            return {...state, \r\n                    requests: state.requests.filter(request => request._id !== toDeleteId)}; \r\n            break;\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\LoadingComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\NoItemsComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\lastIdReducer.js",["227"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const LastId = (state = {\r\n        lastRequest: { id: 0 },\r\n        lastOrder: { id: 0 },\r\n        lastInStock: { id: 0 },\r\n        lastOutOfStock: { id: 0 }\r\n    }, action) => {\r\n    switch (action.type) {  \r\n        case ActionTypes.GET_LAST_REQUEST:\r\n            return {...state, \r\n                lastRequest: action.payload};\r\n        case ActionTypes.GET_LAST_ORDER:      \r\n            return {...state, \r\n                lastOrder: action.payload};\r\n        case ActionTypes.GET_LAST_INSTOCK:    \r\n            return {...state, \r\n                lastInStock: action.payload};\r\n        case ActionTypes.GET_LAST_OUTSTOCK:    \r\n            return {...state, \r\n                lastOutOfStock: action.payload};\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\ordersReducer.js",["228","229","230","231"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Orders = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        orders: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_ORDERS:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    orders: action.payload};            \r\n        case ActionTypes.ORDERS_FAILED:\r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_ORDER:\r\n            const order = action.payload;\r\n            return {...state, \r\n                    orders: state.orders.concat(order)}; \r\n            break;\r\n        case ActionTypes.EDIT_ORDER:\r\n            const editedOrder = action.payload;\r\n        return {...state, \r\n                orders: state.orders.filter(o => o._id !== editedOrder._id).concat(editedOrder)}; \r\n        break;\r\n        case ActionTypes.DELETE_ORDER:\r\n            const toDeleteId = action.payload; \r\n        return {...state, \r\n                orders: state.orders.filter(o => o._id !== toDeleteId)}; \r\n        break;\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OrderTableRow.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\inStockReducer.js",["232","233"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Instock = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        instock: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_INSTOCK:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    instock: action.payload};            \r\n        case ActionTypes.INSTOCK_FAILED: \r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_INSTOCK:\r\n                const instock = action.payload;\r\n            return {...state, \r\n                instock: state.instock.concat(instock)}; \r\n            break;\r\n        case ActionTypes.DELETE_INSTOCK:\r\n            const toDeleteId = action.payload;\r\n            return {...state, \r\n                instock: state.instock.filter(o => o._id !== toDeleteId)};\r\n        case ActionTypes.EDIT_LOCATION:\r\n            const toChangeItem = action.payload;\r\n            return {...state, \r\n                instock: state.instock.filter(o => o._id !== toChangeItem._id).concat(toChangeItem)}; \r\n        case ActionTypes.EDIT_DETAILS:\r\n            const toChangeDetails = action.payload;\r\n            return {...state, \r\n                instock: state.instock.filter(o => o._id !== toChangeDetails._id).concat(toChangeDetails)};         \r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\InStockTableRow.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\FooterComponent.js",["234","235","236","237","238","239"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container\">\r\n                <div>\r\n                    <hr/>\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col col-xl-3 col-sm-2 vertical-line\">\r\n                            <h6>EXPLORE</h6>\r\n                            <ul class=\"list-unstyled\">\r\n                                <li><a href=\"http://biology.unm.edu/\" target=\"_blank\" class=\"text-dark\">UNM Biology</a></li>\r\n                                <li><a href=\"https://ceti.unm.edu/\" target=\"_blank\" class=\"text-dark\">UNM CETI</a></li>\r\n                                <li><a href=\"https://isdci.org/\" target=\"_blank\" class=\"text-dark\">ISDCI</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col col-xl-3 col-sm-2 vertical-line\">\r\n                        </div>\r\n                        <div class=\"col col-xl-3 col-sm-2 vertical-line\">\r\n                            <h7>FOLLOW</h7>\r\n                            <ul class=\"list-unstyled\">\r\n                                <li><a href=\"https://sites.google.com/site/irenesalinasremiro/about-me\" target=\"_blank\" class=\"text-dark\"><i class=\"fa fa-rss\"></i></a></li>\r\n                                <li><a href=\"https://twitter.com/drsalinaslab\" target=\"_blank\" class=\"text-dark\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"vertical-line\"></div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\PurchaseForm.js",[],["240","241"],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\InStockTable.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\OutOfStockTableRow.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\reducers\\outStockReducer.js",["242","243"],"import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Outstock = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        outstock: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_OUTSTOCK:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    outstock: action.payload};            \r\n        case ActionTypes.OUTSTOCK_FAILED: \r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_OUTSTOCK:\r\n                const outstock = action.payload;\r\n            return {...state, \r\n                    outstock: state.outstock.concat(outstock)}; \r\n            break;\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\PdfComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditOrderForm.js",[],["244","245"],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\DeliveredForm.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\ImgComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditStockForm.js",["246","247","248","249","250"],"import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { editDetails, fetchInStock } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//const required = val => val && val.length; \r\nconst maxLength = len => val => !val || (val.length <= len); \r\nconst minLength = len => val => val && (val.length >= len); \r\nconst isNumber = val => !isNaN(+val); \r\nconst isZero = val => val && (+val > 0);\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    editDetails: (instock) => (editDetails(instock)),\r\n    fetchInStock: () => (fetchInStock())\r\n};\r\n\r\nclass EditStockForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isErrorQty: false, \r\n            quantity: \"\",\r\n            isErrorAliq: false,\r\n            aliquot: \"\",\r\n            isErrorNotes: false,\r\n            stocknotes: \"\"\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n        this.onChangeAliquot = this.onChangeAliquot.bind(this);\r\n        this.onChangeStocknotes = this.onChangeStocknotes.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    onChangeQuantity(e) {\r\n        e.preventDefault();\r\n        const quantity = e.target.value; \r\n\r\n        (quantity.length !== 0) ?\r\n        this.setState({ quantity: quantity }) : \r\n        this.setState({ quantity: \"\" });\r\n        \r\n        const isNumber = val => !isNaN(+val); \r\n        const resultN = isNumber(quantity);\r\n        const isZero = val => val && (+val > 0);\r\n        const resultZ = isZero(quantity);\r\n\r\n        if (!isNumber || !resultZ) {\r\n            return this.setState({\r\n                isErrorQty: true \r\n            });\r\n        } else {\r\n            return this.setState({\r\n                isErrorQty: false  \r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeAliquot(e) {\r\n        e.preventDefault();\r\n        const aliquot = e.target.value; \r\n\r\n        (aliquot.length !== 0) ?\r\n        this.setState({ aliquot: aliquot }) : \r\n        this.setState({ aliquot: \"\" }) \r\n\r\n        const minLength = len => val => val && (val.length >= len); \r\n        const result = minLength(5)(aliquot);\r\n        if (!result) {\r\n            return this.setState({\r\n                isErrorAliq: true \r\n            });\r\n        } else {\r\n            return this.setState({\r\n                isErrorAliq: false  \r\n            });\r\n        } \r\n    }\r\n\r\n    onChangeStocknotes(e) {\r\n        e.preventDefault();\r\n        const stocknotes = e.target.value; \r\n\r\n        (stocknotes.length !== 0) ?\r\n        this.setState({ stocknotes: stocknotes }) : \r\n        this.setState({ stocknotes: \"\" }) \r\n\r\n        const minLength = len => val => val && (val.length >= len); \r\n        const result = minLength(5)(stocknotes);\r\n        if (!result) {\r\n            return this.setState({\r\n                isErrorNotes: true \r\n            });\r\n        } else {\r\n            return this.setState({\r\n                isErrorNotes: false  \r\n            });\r\n        } \r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const i = this.props.item;           \r\n        const item_id = i._id; \r\n        let newDetails = {}\r\n        // let newDetails = {\r\n        //     item_id: item_id\r\n        // }\r\n\r\n        const quantity = this.state.quantity;\r\n        const updateqtydate = new Date().toISOString();\r\n        const updateqtyuser = this.props.auth.user.name;\r\n        if (quantity.length !== 0) {\r\n            newDetails.quantity = quantity;\r\n            newDetails.updateqtydate = updateqtydate;\r\n            newDetails.updateqtyuser = updateqtyuser; \r\n        }\r\n\r\n        const aliquot = this.state.aliquot;\r\n        const updatealiqdate = new Date().toISOString();\r\n        const updatealiquser = this.props.auth.user.name;\r\n        if (aliquot.length !== 0) {\r\n            newDetails.aliquot = aliquot;\r\n            newDetails.updatealiqdate = updatealiqdate;\r\n            newDetails.updatealiquser = updatealiquser; \r\n        }\r\n\r\n        const stocknotes = this.state.stocknotes;\r\n        const updatenotedate = new Date().toISOString();\r\n        const updatenoteuser = this.props.auth.user.name;\r\n\r\n        if (stocknotes.length !== 0) {\r\n            newDetails.stocknotes = stocknotes;\r\n            newDetails.updatenotedate = updatenotedate;\r\n            newDetails.updatenoteuser = updatenoteuser; \r\n        }\r\n\r\n        if (newDetails.length !== 0) {\r\n            newDetails.item_id = item_id; \r\n        //if ((quantity.length !== 0) || (aliquot.length !== 0) || (stocknotes.length !== 0)) {\r\n            alert('newDetails is ' + JSON.stringify(newDetails) ); \r\n            this.props.editDetails(newDetails);\r\n        }    \r\n        this.props.fetchInStock();\r\n        this.toggleModal();\r\n    }\r\n\r\n    render() {\r\n        let i = this.props.item;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil\" />\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Updating info of item:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{i.article}</h4>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"quantity\">New Quantity: </Label>\r\n                                <Input type=\"text\" name=\"quantity\" id=\"quantity\" \r\n                                    onChange={this.onChangeQuantity}\r\n                                    invalid={this.state.isErrorQty && this.state.quantity}\r\n                                />\r\n                                {(this.state.isErrorQty && this.state.quantity) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Must be a valid quantity | In case of zero, set as out of stock.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <FormGroup>\r\n                                <Label for=\"aliquot\">New Aliquot: </Label>\r\n                                <Input type=\"text\" name=\"aliquot\" id=\"aliquot\" \r\n                                    onChange={this.onChangeAliquot}\r\n                                    invalid={this.state.isErrorAliq && this.state.aliquot}\r\n                                />\r\n                                {(this.state.isErrorAliq && this.state.aliquot) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Must be at least 5 characters.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"stocknotes\">New Additional Notes: </Label>\r\n                                <Input type=\"text\" name=\"stocknotes\" id=\"stocknotes\" \r\n                                    onChange={this.onChangeStocknotes}\r\n                                    invalid={this.state.isErrorNotes && this.state.stocknotes}\r\n                                />\r\n                                {(this.state.isErrorNotes && this.state.stocknotes) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Must be at least 5 characters.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditStockForm));","C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\DetailsComponent.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditOutOfStockForm.js",[],"C:\\Full Stack Projects\\BioLab Inventory Project\\lab_inventory_project\\labinventory\\src\\components\\EditLocation.js",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":2,"column":35,"nodeType":"257","messageId":"258","endLine":2,"endColumn":40},{"ruleId":"255","severity":1,"message":"259","line":2,"column":42,"nodeType":"257","messageId":"258","endLine":2,"endColumn":48},{"ruleId":"251","replacedBy":"260"},{"ruleId":"253","replacedBy":"261"},{"ruleId":"251","replacedBy":"262"},{"ruleId":"253","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":38,"column":25,"nodeType":"266","endLine":38,"endColumn":47},{"ruleId":"251","replacedBy":"267"},{"ruleId":"253","replacedBy":"268"},{"ruleId":"255","severity":1,"message":"269","line":2,"column":23,"nodeType":"257","messageId":"258","endLine":2,"endColumn":34},{"ruleId":"270","severity":1,"message":"271","line":82,"column":33,"nodeType":"266","endLine":88,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":103,"column":33,"nodeType":"266","endLine":109,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":124,"column":33,"nodeType":"266","endLine":132,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":149,"column":33,"nodeType":"266","endLine":157,"endColumn":35},{"ruleId":"272","severity":1,"message":"273","line":11,"column":1,"nodeType":"274","endLine":27,"endColumn":2},{"ruleId":"272","severity":1,"message":"273","line":5,"column":1,"nodeType":"274","endLine":12,"endColumn":2},{"ruleId":"275","severity":1,"message":"276","line":22,"column":13,"nodeType":"277","messageId":"278","endLine":22,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":27,"column":13,"nodeType":"277","messageId":"278","endLine":27,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":30,"column":13,"nodeType":"277","messageId":"278","endLine":30,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":24,"column":13,"nodeType":"277","messageId":"278","endLine":24,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":22,"column":13,"nodeType":"277","messageId":"278","endLine":22,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":27,"column":9,"nodeType":"277","messageId":"278","endLine":27,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":32,"column":9,"nodeType":"277","messageId":"278","endLine":32,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":35,"column":13,"nodeType":"277","messageId":"278","endLine":35,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":22,"column":13,"nodeType":"277","messageId":"278","endLine":22,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":37,"column":13,"nodeType":"277","messageId":"278","endLine":37,"endColumn":19},{"ruleId":"255","severity":1,"message":"279","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"280","severity":1,"message":"281","line":21,"column":71,"nodeType":"282","endLine":21,"endColumn":86},{"ruleId":"280","severity":1,"message":"281","line":22,"column":69,"nodeType":"282","endLine":22,"endColumn":84},{"ruleId":"280","severity":1,"message":"281","line":23,"column":66,"nodeType":"282","endLine":23,"endColumn":81},{"ruleId":"280","severity":1,"message":"281","line":31,"column":105,"nodeType":"282","endLine":31,"endColumn":120},{"ruleId":"280","severity":1,"message":"281","line":32,"column":80,"nodeType":"282","endLine":32,"endColumn":95},{"ruleId":"251","replacedBy":"283"},{"ruleId":"253","replacedBy":"284"},{"ruleId":"275","severity":1,"message":"276","line":22,"column":13,"nodeType":"277","messageId":"278","endLine":22,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":25,"column":13,"nodeType":"277","messageId":"278","endLine":25,"endColumn":19},{"ruleId":"251","replacedBy":"285"},{"ruleId":"253","replacedBy":"286"},{"ruleId":"255","severity":1,"message":"287","line":9,"column":7,"nodeType":"257","messageId":"258","endLine":9,"endColumn":16},{"ruleId":"255","severity":1,"message":"288","line":10,"column":7,"nodeType":"257","messageId":"258","endLine":10,"endColumn":16},{"ruleId":"255","severity":1,"message":"289","line":11,"column":7,"nodeType":"257","messageId":"258","endLine":11,"endColumn":15},{"ruleId":"255","severity":1,"message":"290","line":12,"column":7,"nodeType":"257","messageId":"258","endLine":12,"endColumn":13},{"ruleId":"255","severity":1,"message":"291","line":61,"column":15,"nodeType":"257","messageId":"258","endLine":61,"endColumn":22},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.",["292"],["293"],["292"],["293"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["292"],["293"],"'NavbarBrand' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["292"],["293"],["292"],["293"],"'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","'isNumber' is assigned a value but never used.","'isZero' is assigned a value but never used.","'resultN' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]