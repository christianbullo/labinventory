{"version":3,"sources":["reportWebVitals.js","utils/setAuthToken.js","actions/ActionsTypes.js","actions/ActionCreators.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","reducers/lastIdReducer.js","reducers/requestsReducer.js","reducers/ordersReducer.js","reducers/inStockReducer.js","reducers/outStockReducer.js","store.js","components/HeaderComponent.js","components/FooterComponent.js","components/PurchaseForm.js","components/RequestTableRow.js","components/RequestForm.js","components/LoadingComponent.js","components/NoItemsComponent.js","components/RequestTable.js","components/PdfComponent.js","components/EditOrderForm.js","components/DeliveredForm.js","components/OrderTableRow.js","components/OrderTable.js","components/ImgComponent.js","components/EditStockForm.js","components/DetailsComponent.js","components/EditOutOfStockForm.js","components/EditLocation.js","components/InStockTableRow.js","components/InStockTable.js","components/OutOfStockTableRow.js","components/OutOfStockTable.js","components/StatsComponent.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","assets/images/dashboard_background.JPG","components/dashboard/Dashboard.js","components/MainComponent.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","GET_REQUESTS","REQUESTS_FAILED","ADD_REQUEST","GET_LAST_REQUEST","DELETE_REQUEST","GET_ORDERS","ORDERS_FAILED","ADD_ORDER","GET_LAST_ORDER","DELETE_ORDER","EDIT_ORDER","GET_INSTOCK","INSTOCK_FAILED","ADD_INSTOCK","GET_LAST_INSTOCK","DELETE_INSTOCK","EDIT_LOCATION","EDIT_DETAILS","GET_OUTSTOCK","OUTSTOCK_FAILED","ADD_OUTSTOCK","GET_LAST_OUTSTOCK","setCurrentUser","decoded","type","ActionTypes","payload","logoutUser","dispatch","localStorage","removeItem","getLastRequest","lastRequest","fetchRequests","requestsLoading","get","response","data","requests","getRequests","catch","error","requestsFailed","message","errMess","addNewRequest","request","getLastOrder","lastOrder","fetchOrders","ordersLoading","orders","getOrders","ordersFailed","addNewOrder","order","deleteOldRequest","oldRequest_Id","editedOrder","getLastInstock","lastInStock","fetchInStock","instockLoading","instock","getInStock","instockFailed","addInStock","stockData","post","addNewInstock","err","alert","deleteOrder","oldOrder_Id","deleteOldOrder","deleteOldInstock","oldInstock_Id","editLocation","formData","stock","editedLocation","editedDetails","outstockLoading","getOutStock","outstock","outstockFailed","addOutStock","addNewOutstock","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","lastId","id","lastOutOfStock","isLoading","concat","toDeleteId","filter","_id","o","toChangeItem","toChangeDetails","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Header","props","onLogoutClick","e","preventDefault","isNavOpen","toggleNav","bind","this","setState","Fragment","Jumbotron","fluid","className","class","Navbar","dark","sticky","expand","NavbarBrand","to","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","justified","NavItem","Button","outline","name","Component","Footer","href","target","mapDispatchToProps","fetchLastOrder","addOrder","orderData","deleteRequest","oldrequest","PurchaseForm","isModalOpen","isError","pdfdata","tracking","toggleModal","handleSubmit","onTrackingChange","onFileChange","value","length","file","files","newId","item_id","orderdate","Date","toISOString","orderuser","FormData","append","r","Modal","toggle","ModalHeader","article","index","ModalBody","Form","onSubmit","FormGroup","Label","for","Input","onChange","invalid","color","withRouter","connect","RequestTableRow","quantity","unitcost","format","requestdate","requestuser","required","val","maxLength","len","minLength","isNumber","isNaN","isZero","fetchLastRequest","RequestForm","values","newRequest","addRequest","htmlFor","text","model","validators","show","component","messages","Loading","NoItemsComponent","requestData","RequestTable","colSpan","map","PdfComponent","triggerPDF","showFile","blob","newBlob","Blob","navigator","msSaveOrOpenBlob","URL","createObjectURL","link","document","createElement","click","setTimeout","revokeObjectURL","open","item","url","pdfname","fetch","editOrder","EditOrderForm","status","onChangeStatus","event","updateOrder","Col","sm","fetchLastInstock","oldorder","DeliveredForm","imgdata","location","onChangeLocation","deliverydate","deliveryuser","OrderTableRow","OrderTable","ImgComponent","triggerPhoto","imgname","editDetails","EditStockForm","isErrorQty","isErrorAliq","aliquot","isErrorNotes","stocknotes","onChangeQuantity","onChangeAliquot","onChangeStocknotes","resultZ","newDetails","updateqtydate","updateqtyuser","updatealiqdate","updatealiquser","updatenotedate","updatenoteuser","JSON","stringify","i","DetailsComponent","Card","CardBody","CardTitle","CardText","updatelocuser","updatelocdate","EditOutOfSTockForm","updateItem","category","EditLocation","InStockTableRow","deleteInStock","oldInstockId","InStockTable","OutOfStockTableRow","fetchOutStock","OutOfStockTable","StatsComponent","COLORS","pieData","CustomTooltip","active","label","style","backgroundColor","padding","border","PieChart","width","height","Pie","dataKey","nameKey","cx","cy","outerRadius","fill","entry","Cell","Tooltip","content","Legend","Landing","borderRadius","letterSpacing","Register","newUser","email","password","password2","registerUser","history","push","nextProps","CardSubtitle","noValidate","classnames","paddingLeft","userData","res","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","Dashboard","split","src","imageUrl","Main","exact","path","jwtToken","currentTime","now","exp","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60d86cef.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n// REQUESTS\r\nexport const GET_REQUESTS = \"GET_REQUESTS\";\r\nexport const REQUESTS_LOADING = \"REQUESTS_LOADING\";\r\nexport const REQUESTS_FAILED = \"REQUESTS_FAILED\";\r\n\r\nexport const ADD_REQUEST = \"ADD_REQUEST\";\r\nexport const GET_LAST_REQUEST = \"GET_LAST_REQUEST\";\r\nexport const DELETE_REQUEST = 'DELETE_REQUEST';\r\n\r\n// ORDERS\r\nexport const GET_ORDERS = \"GET_ORDERS\";\r\nexport const ORDERS_LOADING = \"ORDERS_LOADING\";\r\nexport const ORDERS_FAILED = \"ORDERS_FAILED\";\r\n\r\nexport const ADD_ORDER = \"ADD_ORDER\";\r\nexport const GET_LAST_ORDER = \"GET_LAST_ORDER\";\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\nexport const EDIT_ORDER = \"EDIT_ORDER\";\r\n\r\n// IN STOCK \r\nexport const GET_INSTOCK = \"GET_INSTOCK\";\r\nexport const INSTOCK_LOADING = \"INSTOCK_LOADING\";\r\nexport const INSTOCK_FAILED = \"INSTOCK_FAILED\";\r\n\r\nexport const ADD_INSTOCK = \"ADD_INSTOCK\";\r\nexport const GET_LAST_INSTOCK = \"GET_LAST_INSTOCK\";\r\nexport const DELETE_INSTOCK = 'DELETE_INSTOCK';\r\n\r\nexport const EDIT_LOCATION = \"EDIT_LOCATION\";\r\n\r\nexport const EDIT_DETAILS = \"EDIT_DETAILS\";\r\n\r\n// OUT OF STOCK \r\nexport const GET_OUTSTOCK = \"GET_OUTSTOCK\";\r\nexport const OUTSTOCK_LOADING = \"OUTSTOCK_LOADING\";\r\nexport const OUTSTOCK_FAILED = \"OUTSTOCK_FAILED\";\r\n\r\nexport const ADD_OUTSTOCK = \"ADD_OUTSTOCK\";\r\nexport const GET_LAST_OUTSTOCK = \"GET_LAST_OUTSTOCK\"; \r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport * as ActionTypes from \"./ActionsTypes\";\r\n\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/signup\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: ActionTypes.GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: ActionTypes.GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: ActionTypes.SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: ActionTypes.USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\n// REQUESTS\r\n\r\n// Get last ID\r\nexport const fetchLastRequest = () => dispatch => {\r\n  axios\r\n    .get(\"/api/stock/requests/lastrequest\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(lastRequest => dispatch(getLastRequest(lastRequest)))\r\n    .catch(error => dispatch(requestsFailed(error.message)));\r\n}\r\n\r\nexport const getLastRequest = lastRequest => ({\r\n  type: ActionTypes.GET_LAST_REQUEST,\r\n  payload: lastRequest\r\n}); \r\n\r\n// Get requests \r\nexport const fetchRequests = () => dispatch => {\r\n  dispatch(requestsLoading()); \r\n\r\n  axios\r\n    .get(\"/api/stock/requests/requests\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(requests => dispatch(getRequests(requests)))\r\n    .catch(error => dispatch(requestsFailed(error.message)));\r\n};\r\n\r\nexport const requestsLoading = () => ({\r\n  type: ActionTypes.REQUESTS_LOADING\r\n});\r\n\r\nexport const getRequests = requests => ({\r\n  type: ActionTypes.GET_REQUESTS,\r\n  payload: requests\r\n}); \r\n\r\nexport const requestsFailed = errMess => ({\r\n  type: ActionTypes.REQUESTS_FAILED,\r\n  payload: errMess\r\n});\r\n\r\n// Add request \r\nexport const addRequest = (requestData) => dispatch => {\r\n  axios\r\n    .post(\"/api/stock/requests/addrequest\", requestData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(request => {\r\n      dispatch(addNewRequest(request));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in add request!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const addNewRequest = request => ({\r\n  type: ActionTypes.ADD_REQUEST,\r\n  payload: request\r\n});\r\n\r\n\r\n// ORDERS\r\n\r\n// Get last ID\r\nexport const fetchLastOrder = () => dispatch => {\r\n  axios\r\n    .get(\"/api/stock/orders/lastorder\")\r\n    .then(response => {\r\n      //alert('response fetch is ' + response);\r\n      return response.data;\r\n    })\r\n    //.then(lastOrder => dispatch(getLastOrder(lastOrder)))\r\n    .then(lastOrder => dispatch(getLastOrder(lastOrder)))\r\n    .catch(error => dispatch(ordersFailed(error.message)));\r\n}\r\n\r\nexport const getLastOrder = lastOrder => ({\r\n  type: ActionTypes.GET_LAST_ORDER,\r\n  payload: lastOrder\r\n}); \r\n\r\n// Get orders \r\nexport const fetchOrders = () => dispatch => {\r\n  dispatch(ordersLoading()); \r\n\r\n  axios\r\n    .get(\"/api/stock/orders/orders\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(orders => dispatch(getOrders(orders)))\r\n    .catch(error => dispatch(ordersFailed(error.message)));\r\n};\r\n\r\nexport const ordersLoading = () => ({\r\n  type: ActionTypes.ORDERS_LOADING\r\n});\r\n\r\nexport const getOrders = orders => ({\r\n  type: ActionTypes.GET_ORDERS,\r\n  payload: orders\r\n}); \r\n\r\nexport const ordersFailed = errMess => ({\r\n  type: ActionTypes.ORDERS_FAILED,\r\n  payload: errMess\r\n});\r\n\r\n// Add order \r\nexport const addOrder = (orderData) => dispatch => {\r\n  axios\r\n    .post(\"/api/stock/orders/addorder\", orderData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(order => {\r\n      dispatch(addNewOrder(order));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in add order!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const addNewOrder = order => ({\r\n  type: ActionTypes.ADD_ORDER,\r\n  payload: order \r\n});\r\n\r\n// delete old request \r\nexport const deleteRequest = (oldRequest_Id) => dispatch => {\r\n  // Remove old request after updating as an order \r\n  dispatch(deleteOldRequest(oldRequest_Id));\r\n};\r\n\r\nexport const deleteOldRequest = oldRequest_Id => ({\r\n  type: ActionTypes.DELETE_REQUEST,\r\n  payload: oldRequest_Id \r\n});\r\n\r\n// Edit order \r\nexport const editOrder = (formData) => dispatch => {\r\n  \r\n  axios\r\n    .post(\"/api/stock/orders/editorder\", formData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(order => {\r\n      dispatch(editedOrder(order));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in edit order!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const editedOrder = order => ({\r\n  type: ActionTypes.EDIT_ORDER,\r\n  payload: order \r\n});\r\n\r\n// IN STOCK \r\n\r\n// Get last ID\r\nexport const fetchLastInstock = () => dispatch => {\r\n  axios\r\n    .get(\"/api/stock/instock/lastinstock\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(lastInStock => dispatch(getLastInstock(lastInStock)))\r\n    .catch(error => dispatch(instockFailed(error.message)));\r\n}\r\n\r\nexport const getLastInstock = lastInStock => ({\r\n  type: ActionTypes.GET_LAST_INSTOCK, \r\n  payload: lastInStock\r\n}); \r\n\r\n// Get in stock  \r\nexport const fetchInStock = () => dispatch => {\r\n  dispatch(instockLoading()); \r\n\r\n  axios\r\n    .get(\"/api/stock/instock/instock\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(instock => dispatch(getInStock(instock)))\r\n    .catch(error => dispatch(instockFailed(error.message)));\r\n};\r\n\r\nexport const instockLoading = () => ({\r\n  type: ActionTypes.INSTOCK_LOADING\r\n});\r\n\r\nexport const getInStock = instock => ({\r\n  type: ActionTypes.GET_INSTOCK, \r\n  payload: instock\r\n}); \r\n\r\nexport const instockFailed = errMess => ({\r\n  type: ActionTypes.INSTOCK_FAILED,\r\n  payload: errMess\r\n});\r\n\r\n// Add in stock  \r\nexport const addInStock = (stockData) => dispatch => {\r\n  axios\r\n    .post(\"/api/stock/instock/addinstock\", stockData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(instock => {\r\n      dispatch(addNewInstock(instock));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in add in stock!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const addNewInstock = instock => ({\r\n  type: ActionTypes.ADD_INSTOCK,  \r\n  payload: instock \r\n});\r\n\r\n// delete old request \r\nexport const deleteOrder = (oldOrder_Id) => dispatch => {\r\n  // Remove old order after updating as in stock \r\n  dispatch(deleteOldOrder(oldOrder_Id));\r\n};\r\n\r\nexport const deleteOldOrder = oldOrder_Id => ({\r\n  type: ActionTypes.DELETE_ORDER,\r\n  payload: oldOrder_Id  \r\n});\r\n\r\n// delete old in stock  \r\nexport const deleteInStock = (oldInstock_Id) => dispatch => {\r\n  // Remove old request after updating as an order \r\n  dispatch(deleteOldInstock(oldInstock_Id));\r\n};\r\n\r\nexport const deleteOldInstock = oldInstock_Id => ({\r\n  type: ActionTypes.DELETE_INSTOCK, \r\n  payload: oldInstock_Id \r\n});\r\n\r\n// Edit stock location \r\nexport const editLocation = (formData) => dispatch => {\r\n  \r\n  axios\r\n    .post(\"/api/stock/instock/editlocation\", formData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(stock => {\r\n      dispatch(editedLocation(stock));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in edit LOCATION!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const editedLocation = stock => ({\r\n  type: ActionTypes.EDIT_LOCATION,\r\n  payload: stock  \r\n});\r\n\r\n// Edit stock details \r\nexport const editDetails = (formData) => dispatch => {\r\n  \r\n  axios\r\n    .post(\"/api/stock/instock/editdetails\", formData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(stock => {\r\n      dispatch(editedDetails(stock));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in edit DETAILS!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const editedDetails = stock => ({\r\n  type: ActionTypes.EDIT_DETAILS,\r\n  payload: stock  \r\n});\r\n\r\n\r\n\r\n// OUT OF STOCK \r\n\r\n// Get last ID\r\nexport const fetchLastOutstock = () => dispatch => {\r\n  axios\r\n    .get(\"/api/stock/outstock/lastoutstock\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(lastOutStock => dispatch(getLastOutstock(lastOutStock)))\r\n    .catch(error => dispatch(outstockFailed(error.message)));\r\n}\r\n\r\nexport const getLastOutstock = lastOutStock => ({\r\n  type: ActionTypes.GET_LAST_OUTSTOCK, \r\n  payload: lastOutStock\r\n}); \r\n\r\n// Get out of stock  \r\nexport const fetchOutStock = () => dispatch => {\r\n  dispatch(outstockLoading()); \r\n\r\n  axios\r\n    .get(\"/api/stock/outstock/outstock\")\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(outstock => dispatch(getOutStock(outstock)))\r\n    .catch(error => dispatch(outstockFailed(error.message)));\r\n};\r\n\r\nexport const outstockLoading = () => ({\r\n  type: ActionTypes.OUTSTOCK_LOADING\r\n});\r\n\r\nexport const getOutStock = outstock => ({\r\n  type: ActionTypes.GET_OUTSTOCK, \r\n  payload: outstock\r\n}); \r\n\r\nexport const outstockFailed = errMess => ({\r\n  type: ActionTypes.OUTSTOCK_FAILED,\r\n  payload: errMess\r\n});\r\n\r\n// Add out of stock  \r\nexport const addOutStock = (stockData) => dispatch => {\r\n  axios\r\n    .post(\"/api/stock/outstock/addoutstock\", stockData)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(outstock => {\r\n      dispatch(addNewOutstock(outstock));\r\n    })\r\n    .catch(err =>\r\n      {\r\n        alert('errore in add out of stock!!!!! err = ' + err);\r\n        dispatch({\r\n          type: ActionTypes.GET_ERRORS,\r\n          payload: err.response.data\r\n        })  \r\n      }\r\n    );\r\n};\r\n\r\nexport const addNewOutstock = outstock => ({\r\n  type: ActionTypes.ADD_OUTSTOCK,  \r\n  payload: outstock \r\n});\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case ActionTypes.USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_ERRORS: \r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport { LastId } from \"./lastIdReducer\";\r\nimport { Requests } from \"./requestsReducer\";\r\nimport { Orders } from \"./ordersReducer\";\r\nimport { Instock } from \"./inStockReducer\";\r\nimport { Outstock } from \"./outStockReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  lastId: LastId,  \r\n  requests: Requests,\r\n  orders: Orders,\r\n  instock: Instock,\r\n  outstock: Outstock\r\n});\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const LastId = (state = {\r\n        lastRequest: { id: 0 },\r\n        lastOrder: { id: 0 },\r\n        lastInStock: { id: 0 },\r\n        lastOutOfStock: { id: 0 }\r\n    }, action) => {\r\n    switch (action.type) {  \r\n        case ActionTypes.GET_LAST_REQUEST:\r\n            return {...state, \r\n                lastRequest: action.payload};\r\n        case ActionTypes.GET_LAST_ORDER:      \r\n            return {...state, \r\n                lastOrder: action.payload};\r\n        case ActionTypes.GET_LAST_INSTOCK:    \r\n            return {...state, \r\n                lastInStock: action.payload};\r\n        case ActionTypes.GET_LAST_OUTSTOCK:    \r\n            return {...state, \r\n                lastOutOfStock: action.payload};\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Requests = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        requests: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_REQUESTS:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    requests: action.payload};            \r\n        case ActionTypes.REQUESTS_FAILED:\r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_REQUEST:\r\n            const request = action.payload;\r\n            return {...state, \r\n                    requests: state.requests.concat(request)}; \r\n            break;\r\n        case ActionTypes.DELETE_REQUEST:\r\n            const toDeleteId = action.payload;\r\n            return {...state, \r\n                    requests: state.requests.filter(request => request._id !== toDeleteId)}; \r\n            break;\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Orders = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        orders: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_ORDERS:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    orders: action.payload};            \r\n        case ActionTypes.ORDERS_FAILED:\r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_ORDER:\r\n            const order = action.payload;\r\n            return {...state, \r\n                    orders: state.orders.concat(order)}; \r\n            break;\r\n        case ActionTypes.EDIT_ORDER:\r\n            const editedOrder = action.payload;\r\n        return {...state, \r\n                orders: state.orders.filter(o => o._id !== editedOrder._id).concat(editedOrder)}; \r\n        break;\r\n        case ActionTypes.DELETE_ORDER:\r\n            const toDeleteId = action.payload; \r\n        return {...state, \r\n                orders: state.orders.filter(o => o._id !== toDeleteId)}; \r\n        break;\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Instock = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        instock: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_INSTOCK:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    instock: action.payload};            \r\n        case ActionTypes.INSTOCK_FAILED: \r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_INSTOCK:\r\n                const instock = action.payload;\r\n            return {...state, \r\n                instock: state.instock.concat(instock)}; \r\n            break;\r\n        case ActionTypes.DELETE_INSTOCK:\r\n            const toDeleteId = action.payload;\r\n            return {...state, \r\n                instock: state.instock.filter(o => o._id !== toDeleteId)};\r\n        case ActionTypes.EDIT_LOCATION:\r\n            const toChangeItem = action.payload;\r\n            return {...state, \r\n                instock: state.instock.filter(o => o._id !== toChangeItem._id).concat(toChangeItem)}; \r\n        case ActionTypes.EDIT_DETAILS:\r\n            const toChangeDetails = action.payload;\r\n            return {...state, \r\n                instock: state.instock.filter(o => o._id !== toChangeDetails._id).concat(toChangeDetails)};         \r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actions/ActionsTypes\";\r\n\r\nexport const Outstock = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        outstock: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_OUTSTOCK:\r\n            return {...state, \r\n                    isLoading: false, \r\n                    errMess: null, \r\n                    outstock: action.payload};            \r\n        case ActionTypes.OUTSTOCK_FAILED: \r\n            return {...state, \r\n                isLoading: false,\r\n                errMess: action.payload};     \r\n        case ActionTypes.ADD_OUTSTOCK:\r\n                const outstock = action.payload;\r\n            return {...state, \r\n                    outstock: state.outstock.concat(outstock)}; \r\n            break;\r\n        default:\r\n            return state; \r\n            break;\r\n    }\r\n}\r\n\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.onLogoutClick = this.onLogoutClick.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n\r\n        const { user } = this.props.auth; \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Jumbotron fluid>\r\n                    <div className=\"container text-light\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <h1>LAB</h1>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-4\">\r\n                            </div>\r\n                            <div class=\"col-sm-5\">\r\n                                <h2>INVENTORY</h2>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Navbar dark sticky=\"top\" expand=\"md\">\r\n                    <div className=\"container justify-content-between\">\r\n                        <NavbarBrand className=\"ml-0 mr-sm-2\">\r\n                                <NavLink className=\"nav-link\" to=\"/\">\r\n                                    { this.props.auth.isAuthenticated === true ? \r\n                                        (\r\n                                            <i className=\"fa fa-user fa-lg\"></i>\r\n                                        ) \r\n                                        : \r\n                                        (\r\n                                            <i className=\"fa fa-info-circle fa-lg\"></i>\r\n                                        )\r\n                                    }\r\n                                </NavLink>\r\n                        </NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />   \r\n                        <Collapse isOpen={this.state.isNavOpen} navbar className=\"justify-content-center\">                  \r\n                            { this.props.auth.isAuthenticated === true ? \r\n                                (\r\n                                    <Nav navbar justified className=\"justify-content-between\">                                 \r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/requests\">\r\n                                                <i className=\"fa fa-list-alt fa-lg\">{' '}<span className=\"menu\">Requests Board</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/orders\">\r\n                                                <i className=\"fa fa-truck fa-lg\">{' '}<span className=\"menu\">Incoming Orders</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/instock\">\r\n                                                <i className=\"fa fa-folder-open fa-lg\">{' '}<span className=\"menu\">In stock</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/outofstock\">\r\n                                                <i className=\"fa fa-folder fa-lg\">{' '}<span className=\"menu\">Out of stock</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/stats\">\r\n                                                <i className=\"fa fa-bar-chart fa-lg\">{' '}<span className=\"menu\">Stats</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <Button outline className=\"text-dark ml-3\" onClick={this.onLogoutClick}>\r\n                                                <i class=\"fa fa-sign-out\">{' '}<span className=\"menu\">Logout user: {user.name}</span></i> \r\n                                            </Button>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                ) \r\n                                : \r\n                                (\r\n                                    <Nav navbar className=\"justify-content-end ml-auto w-100\">                                 \r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/register\">\r\n                                                <i className=\"fa fa-user-plus fa-lg\">{' '}<span className=\"menu\">Signup</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link\" to=\"/login\">\r\n                                                <i className=\"fa fa-sign-in fa-lg\">{' '}<span className=\"menu\">Login</span></i>\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                )\r\n                            }\r\n                        </Collapse> \r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <div class=\"container\">\r\n                <div>\r\n                    <hr/>\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col col-xl-3 col-sm-2 vertical-line\">\r\n                            <h6>EXPLORE</h6>\r\n                            <ul class=\"list-unstyled\">\r\n                                <li><a href=\"http://biology.unm.edu/\" target=\"_blank\" class=\"text-dark\">UNM Biology</a></li>\r\n                                <li><a href=\"https://ceti.unm.edu/\" target=\"_blank\" class=\"text-dark\">UNM CETI</a></li>\r\n                                <li><a href=\"https://isdci.org/\" target=\"_blank\" class=\"text-dark\">ISDCI</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col col-xl-3 col-sm-2 vertical-line\">\r\n                        </div>\r\n                        <div class=\"col col-xl-3 col-sm-2 vertical-line\">\r\n                            <h7>FOLLOW</h7>\r\n                            <ul class=\"list-unstyled\">\r\n                                <li><a href=\"https://sites.google.com/site/irenesalinasremiro/about-me\" target=\"_blank\" class=\"text-dark\"><i class=\"fa fa-rss\"></i></a></li>\r\n                                <li><a href=\"https://twitter.com/drsalinaslab\" target=\"_blank\" class=\"text-dark\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"vertical-line\"></div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { fetchLastOrder, addOrder, deleteRequest } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchLastOrder: () => (fetchLastOrder()),\r\n    addOrder: (order) => (addOrder(order)),\r\n    deleteRequest: (oldrequest) => (deleteRequest(oldrequest))\r\n};\r\n\r\nclass PurchaseForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isError: false, \r\n            pdfdata: \"\",\r\n            tracking: \"\"\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.onTrackingChange = this.onTrackingChange.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchLastOrder();\r\n    }\r\n\r\n    onTrackingChange(e) {\r\n        e.preventDefault();\r\n        const tracking = e.target.value; \r\n\r\n        (tracking.length !== 0) ?\r\n        this.setState({ tracking: tracking }) : \r\n        this.setState({ tracking: \"\" }) \r\n    }\r\n\r\n    onFileChange(e) {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        \r\n        (!file || file.type !== 'application/pdf') ? \r\n        this.setState({ pdfdata: \"\" }) :\r\n        this.setState({ pdfdata: file })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.tracking || !this.state.pdfdata ) \r\n        {   \r\n            return this.setState({\r\n                isError: true \r\n            });\r\n        }\r\n\r\n        this.props.fetchLastOrder();\r\n        \r\n        const lastOrder = this.props.lastId.lastOrder[0];\r\n        const newId = lastOrder.id + 1; \r\n\r\n        let r = this.props.request;           \r\n\r\n        const item_id = r._id; \r\n        const tracking = this.state.tracking;\r\n        const orderdate = new Date().toISOString();\r\n        const orderuser = this.props.auth.user.name;\r\n        const pdfdata = this.state.pdfdata;\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('item_id', item_id); \r\n        formData.append('id', newId); \r\n        formData.append('tracking', tracking); \r\n        formData.append('orderdate', orderdate); \r\n        formData.append('orderuser', orderuser); \r\n        formData.append('pdfdata', pdfdata); \r\n\r\n        this.props.addOrder(formData);\r\n\r\n        this.props.deleteRequest(item_id);\r\n\r\n        this.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n        let r = this.props.request;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"text-info\">Purchased</span> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Purchase confirmation of:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{r.article}</h4>\r\n                        <h5 className=\"text-info\">{r.index}</h5>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"tracking\">Tracking number: </Label>\r\n                                <Input type=\"text\" name=\"tracking\" id=\"tracking\" \r\n                                    value={this.state.tracking} onChange={this.onTrackingChange}\r\n                                    invalid={this.state.isError && !this.state.tracking}\r\n                                />\r\n                                {(this.state.isError && !this.state.tracking) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Traking number is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <FormGroup>\r\n                                <Label for=\"pdfdata\">Choose the Internal Order Form to upload: </Label>\r\n                                <Input type=\"file\" name=\"pdfdata\" id=\"pdfdata\" \r\n                                    onChange={this.onFileChange} \r\n                                />\r\n                                {(this.state.isError && !this.state.pdfdata) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">PDF file is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}\r\n                            </FormGroup>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PurchaseForm));","import React, { Component } from \"react\";\r\n\r\nimport PurchaseForm from \"./PurchaseForm\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Moment from \"react-moment\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        auth: state.auth,\r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nclass RequestTableRow extends Component {\r\n\r\n    render() {\r\n        let r = this.props.request;\r\n\r\n        return(\r\n            <tr>\r\n                <td> {r.id} </td>\r\n                <td> {r.article} </td>\r\n                <td> {r.index} </td>\r\n                <td> {r.quantity} </td>\r\n                <td> {r.unitcost} </td>\r\n                <td> <Moment format=\"ddd, MMM DD, YYYY\">{r.requestdate}</Moment> </td>\r\n                <td> {r.requestuser} </td>\r\n                <td>\r\n                    <PurchaseForm auth={ this.props.auth } request={ r }/> \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n//export default withRouter(connect(mapStateToProps, mapDispatchToProps)(RequestTableRow));\r\nexport default withRouter(connect(mapStateToProps)(RequestTableRow));","import React, { Component } from \"react\";\r\nimport { Button, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\n\r\nimport { fetchLastRequest, fetchRequests } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst required = val => val && val.length; \r\nconst maxLength = len => val => !val || (val.length <= len); \r\nconst minLength = len => val => val && (val.length >= len); \r\nconst isNumber = val => !isNaN(+val); \r\nconst isZero = val => val && (+val > 0);\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchRequests: () => (fetchRequests()),\r\n    fetchLastRequest: () => (fetchLastRequest())\r\n};\r\n\r\nclass RequestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            //lastRequest: undefined \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        //this.handleLastRequest = this.handleLastRequest.bind(this);\r\n    }\r\n    \r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchLastRequest();\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.fetchLastRequest();\r\n\r\n        const lastRequest = this.props.lastId.lastRequest[0];\r\n        //alert(JSON.stringify(lastRequest)); \r\n        const newId = lastRequest.id + 1; \r\n\r\n        const newRequest = {\r\n            id: newId,  \r\n            ...values,\r\n            requestdate: new Date().toISOString(),\r\n            requestuser: this.props.auth.user.name\r\n        };\r\n\r\n        this.props.addRequest(newRequest);\r\n        this.props.fetchRequests();\r\n        this.toggleModal();\r\n\r\n        //alert('Current state is: ' + JSON.stringify(newRequest) );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"text-info\">Add a new Request</span> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}><span className=\"text-info\">New Request</span></ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={ (values) => this.handleSubmit(values) }>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"article\">Article</Label>\r\n                                <Control.text className=\"form-control\" model=\".article\" id=\"article\" name=\"article\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(100)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".article\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 100 characters or less'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"index\">Index</Label>\r\n                                <Control.text className=\"form-control\" model=\".index\" id=\"index\" name=\"index\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(100)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".index\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 100 characters or less'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"quantity\">Quantity</Label>\r\n                                <Control.text className=\"form-control\" model=\".quantity\" id=\"quantity\" name=\"quantity\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(1),\r\n                                            maxLength: maxLength(30),\r\n                                            isNumber,\r\n                                            isZero\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".quantity\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 1',\r\n                                        maxLength: 'Must be 30 characters or less',\r\n                                        isNumber: 'Must be a number',\r\n                                        isZero: 'Must be a valid quantity'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"unitcost\">Unit cost</Label>\r\n                                <Control.text className=\"form-control\" model=\".unitcost\" id=\"unitcost\" name=\"unitcost\" \r\n                                    validators={{\r\n                                            required,\r\n                                            minLength: minLength(1),\r\n                                            maxLength: maxLength(30),\r\n                                            isNumber,\r\n                                            isZero \r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".unitcost\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be at least 1 characters',\r\n                                        maxLength: 'Must be 30 characters or less',\r\n                                        isNumber: 'Must be a number',\r\n                                        isZero: 'Must be a valid quantity'\r\n                                    }}\r\n                                /> \r\n                            </div>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RequestForm));","import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-3 text-center\">\r\n                    <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n                    <h4>Loading...</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}; ","import React from \"react\";\r\n\r\nexport const NoItemsComponent = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-3 text-center\">\r\n                    <h4>There are currently no items.</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}; ","import React, { Component } from \"react\";\r\nimport RequestTableRow  from \"./RequestTableRow\";\r\nimport RequestForm from \"./RequestForm\";\r\n\r\nimport { fetchRequests, addRequest } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { NoItemsComponent } from \"./NoItemsComponent\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        requests: state.requests \r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = {\r\n    fetchRequests: () => (fetchRequests()),\r\n    addRequest: (request) => (addRequest(request))\r\n};\r\n\r\nclass RequestTable extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchRequests();\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.props.requests.isLoading) {\r\n            return <Loading />\r\n        }\r\n         \r\n        if (this.props.requests.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-3 text-center\">\r\n                            <h4> { this.props.requests.errMess } </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"container-fluid\">                \r\n                <table className=\"table table-sm table-striped table-boredered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"12\" className=\"bg-secondary text-white text-center h4 p-2\">\r\n                                REQUESTS BOARD       \r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Article</th>\r\n                            <th>Index</th>\r\n                            <th>Quantity</th>\r\n                            <th>Unit Cost</th>\r\n                            <th>Requested on</th>\r\n                            <th>Requested by</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {   \r\n                            this.props.requests.requests.map(r => \r\n                            <RequestTableRow \r\n                                request={ r }\r\n                                key={ r.id } \r\n                                auth={ this.props.auth }\r\n                            />\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    (this.props.requests.requests.length === 0) ? (<NoItemsComponent />) : ( <div />)\r\n                }\r\n                <hr/>\r\n                <div className=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-3 text-center\">\r\n                            <RequestForm auth={ this.props.auth } addRequest={ this.props.addRequest }/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RequestTable));","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport default class PdfComponent extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.triggerPDF = this.triggerPDF.bind(this);\r\n        this.showFile = this.showFile.bind(this);\r\n    };\r\n\r\n    showFile(blob){\r\n        // It is necessary to create a new blob object with mime-type explicitly set\r\n        // otherwise only Chrome works like it should\r\n        var newBlob = new Blob([blob], {type: \"application/pdf\"})\r\n      \r\n        // IE doesn't allow using a blob object directly as link href\r\n        // instead it is necessary to use msSaveOrOpenBlob\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n          window.navigator.msSaveOrOpenBlob(newBlob);\r\n          return;\r\n        } \r\n      \r\n        // For other browsers: \r\n        // Create a link pointing to the ObjectURL containing the blob.\r\n        const data = window.URL.createObjectURL(newBlob);\r\n        var link = document.createElement('a');\r\n        link.href = data;\r\n        link.target='_blank';\r\n        //link.download=filename;\r\n        link.click();\r\n        setTimeout(function(){\r\n          // For Firefox it is necessary to delay revoking the ObjectURL\r\n          window.URL.revokeObjectURL(data);\r\n        }, 100);\r\n        window.open(data);\r\n    }\r\n\r\n    triggerPDF() {\r\n        const item = this.props.item;   \r\n        const url = `/api/files/${item.pdfname}`;\r\n\r\n        fetch(url)\r\n        .then(response => response.blob())\r\n        .then(blob => this.showFile(blob));\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.triggerPDF}>\r\n                    <i className=\"fa fa-file-pdf-o\" />\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Col, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { editOrder, fetchOrders } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    editOrder: (formData) => (editOrder(formData)),\r\n    fetchOrders: () => (fetchOrders()),\r\n};\r\n\r\nclass EditOrderForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            status: \"\",\r\n            isError: false \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen \r\n        });\r\n    }\r\n\r\n    onChangeStatus(event) {\r\n        event.preventDefault();\r\n        const status = event.target.value;\r\n        \r\n        (status.length !== 0) ?\r\n        this.setState({ status: status, isError: false }) : \r\n        this.setState({ status: \"\" }) \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.status) \r\n        {   \r\n            return this.setState({\r\n                isError: true \r\n            });\r\n        }\r\n\r\n        const order = this.props.order;\r\n        const orderId = order._id;\r\n\r\n        const status = this.state.status;\r\n        \r\n        const updateOrder = {\r\n            item_id: orderId,  \r\n            status: status \r\n        };\r\n\r\n        this.props.editOrder(updateOrder);\r\n        this.props.fetchOrders();\r\n        this.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n        let o = this.props.order;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil\" /> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Editing item:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{o.tracking}</h4>\r\n                        <h5 className=\"text-info\">{o.article}</h5>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"status\">Status: </Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"select\" name=\"status\" id=\"status\"\r\n                                        onChange={this.onChangeStatus}\r\n                                        invalid={this.state.isError && !this.state.status}\r\n                                    >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"On Schedule\">On Schedule</option>\r\n                                        <option value=\"Delayed\">Delayed</option>\r\n                                        <option value=\"Now arriving\">Now arriving</option>\r\n                                        <option value=\"Arrived\">Arrived</option>\r\n                                    </Input>\r\n                                </Col>\r\n                                {(this.state.isError && !this.state.status) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Status is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditOrderForm));","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { fetchOrders, fetchLastInstock, addInStock, deleteOrder } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchLastInstock: () => (fetchLastInstock()),\r\n    addInStock: (instock) => (addInStock(instock)),\r\n    deleteOrder: (oldorder) => (deleteOrder(oldorder)),\r\n    fetchOrders: () => (fetchOrders())\r\n};\r\n\r\nclass DeliveredForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isError: false, \r\n            imgdata: \"\",\r\n            location: \"\"\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchLastInstock();\r\n    }\r\n\r\n    onChangeLocation(e) {\r\n        e.preventDefault();\r\n        const location = e.target.value; \r\n\r\n        (location.length !== 0) ?\r\n        this.setState({ location: location }) : \r\n        this.setState({ location: \"\" }) \r\n    }\r\n\r\n    onFileChange(e) {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        \r\n        (!file || file.type !== 'image/jpeg' \r\n            // || file.type !== 'image/apng' ||\r\n            // file.type !== 'image/apng' || file.type !== 'image/avif' || \r\n            // file.type !== 'image/gif' || file.type !== 'image/png' || \r\n            // file.type !== 'image/svg+xml'  \r\n        ) ? \r\n        this.setState({ imgdata: \"\" }) :\r\n        this.setState({ imgdata: file })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.location || !this.state.imgdata ) \r\n        {   \r\n            return this.setState({\r\n                isError: true \r\n            });\r\n        }\r\n\r\n        this.props.fetchLastInstock();\r\n        \r\n        const lastInStock = this.props.lastId.lastInStock[0]; \r\n        const newId = lastInStock.id + 1; \r\n\r\n        let o = this.props.order;           \r\n\r\n        const item_id = o._id; \r\n        const location = this.state.location;\r\n        const deliverydate = new Date().toISOString();\r\n        const deliveryuser = this.props.auth.user.name;\r\n        const imgdata = this.state.imgdata;\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('item_id', item_id); \r\n        formData.append('id', newId); \r\n        formData.append('location', location); \r\n        formData.append('deliverydate', deliverydate); \r\n        formData.append('deliveryuser', deliveryuser); \r\n        formData.append('imgdata', imgdata); \r\n\r\n        this.props.addInStock(formData);\r\n\r\n        this.props.deleteOrder(item_id);\r\n        //this.props.fetchOrders();\r\n        this.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n        let o = this.props.order;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"text-info\">Delivered</span> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Delivery confirmation of:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{o.tracking}</h4>\r\n                        <h5 className=\"text-info\">{o.article}</h5>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"location\">Location: </Label>\r\n                                <Input type=\"text\" name=\"location\" id=\"location\" \r\n                                    value={this.state.location} onChange={this.onChangeLocation}\r\n                                    invalid={this.state.isError && !this.state.location}\r\n                                />\r\n                                {(this.state.isError && !this.state.location) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Location description is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <FormGroup>\r\n                                <Label for=\"imgdata\">Upload photo as evidence of location: </Label>\r\n                                <Input type=\"file\" name=\"imgdata\" id=\"imgdata\" \r\n                                    onChange={this.onFileChange} \r\n                                />\r\n                                {(this.state.isError && !this.state.imgdata) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Photo of location is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}\r\n                            </FormGroup>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DeliveredForm));","import React, { Component } from \"react\";\r\n\r\nimport PdfComponent from \"./PdfComponent\";\r\nimport EditOrderForm from \"./EditOrderForm\";\r\nimport DeliveredForm from \"./DeliveredForm\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Moment from \"react-moment\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        auth: state.auth\r\n    };\r\n};\r\n\r\nclass OrderTableRow extends Component {\r\n\r\n    render() {\r\n        let o = this.props.order;\r\n\r\n        return(\r\n            <tr>\r\n                <td> {o.id} </td>\r\n                <td> {o.tracking} </td>\r\n                <td> {o.status} </td>\r\n                <td>\r\n                    <EditOrderForm order={o} />\r\n                </td>\r\n                <td> {o.article} </td>\r\n                <td>\r\n                    <PdfComponent item={o} />  \r\n                </td>\r\n                <td> <Moment format=\"ll\">{o.orderdate}</Moment> </td>\r\n                <td> {o.orderuser} </td>\r\n                <td>\r\n                    <DeliveredForm auth={ this.props.auth } order={o} />  \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(OrderTableRow));","import React, { Component } from \"react\";\r\nimport OrderTableRow from \"./OrderTableRow\";\r\n\r\nimport { fetchOrders, addInStock, deleteOrder } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { NoItemsComponent } from \"./NoItemsComponent\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        orders: state.orders  \r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = {\r\n    fetchOrders: () => (fetchOrders()),\r\n    addInStock: (instock) => (addInStock(instock)),\r\n    deleteOrder: (oldorder) => (deleteOrder(oldorder)),\r\n};\r\n\r\nclass OrderTable extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchOrders();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.orders.isLoading) {\r\n            return <Loading />\r\n        }\r\n         \r\n        if (this.props.orders.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-3 text-center\">\r\n                            <h4> { this.props.orders.errMess } </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <table className=\"table table-sm table-striped table-boredered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"12\" className=\"bg-secondary text-white text-center h4 p-2\">\r\n                                INCOMING ORDERS     \r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Tracking</th>\r\n                            <th>Status</th>\r\n                            <th></th>\r\n                            <th>Article</th>\r\n                            <th></th>\r\n                            <th>Purchased on</th>\r\n                            <th>Ordered by</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {   \r\n                            this.props.orders.orders.map(o => \r\n                                <OrderTableRow order={ o }\r\n                                    key={ o.id }  \r\n                                    auth={ this.props.auth }\r\n                                />)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    (this.props.orders.orders.length === 0) ? (<NoItemsComponent />) : ( <div />)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderTable));","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport default class ImgComponent extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.triggerPhoto = this.triggerPhoto.bind(this);\r\n        this.showFile = this.showFile.bind(this);\r\n    };\r\n\r\n    showFile(blob){\r\n        // It is necessary to create a new blob object with mime-type explicitly set\r\n        // otherwise only Chrome works like it should\r\n        var newBlob = new Blob([blob], {type: \"image/jpeg\"})\r\n      \r\n        // IE doesn't allow using a blob object directly as link href\r\n        // instead it is necessary to use msSaveOrOpenBlob\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n          window.navigator.msSaveOrOpenBlob(newBlob);\r\n          return;\r\n        } \r\n      \r\n        // For other browsers: \r\n        // Create a link pointing to the ObjectURL containing the blob.\r\n        const data = window.URL.createObjectURL(newBlob);\r\n        var link = document.createElement('a');\r\n        link.href = data;\r\n        link.target='_blank';\r\n        //link.download=filename;\r\n        link.click();\r\n        setTimeout(function(){\r\n          // For Firefox it is necessary to delay revoking the ObjectURL\r\n          window.URL.revokeObjectURL(data);\r\n        }, 100);\r\n        window.open(data);\r\n    }\r\n\r\n    triggerPhoto() {\r\n        const item = this.props.item;   \r\n        const url = `/api/files/${item.imgname}`;\r\n\r\n        fetch(url)\r\n        .then(response => response.blob())\r\n        .then(blob => this.showFile(blob));\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.triggerPhoto}>\r\n                    <i className=\"fa fa-camera\" />\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { editDetails, fetchInStock } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//const required = val => val && val.length; \r\nconst maxLength = len => val => !val || (val.length <= len); \r\nconst minLength = len => val => val && (val.length >= len); \r\nconst isNumber = val => !isNaN(+val); \r\nconst isZero = val => val && (+val > 0);\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    editDetails: (instock) => (editDetails(instock)),\r\n    fetchInStock: () => (fetchInStock())\r\n};\r\n\r\nclass EditStockForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isErrorQty: false, \r\n            quantity: \"\",\r\n            isErrorAliq: false,\r\n            aliquot: \"\",\r\n            isErrorNotes: false,\r\n            stocknotes: \"\"\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n        this.onChangeAliquot = this.onChangeAliquot.bind(this);\r\n        this.onChangeStocknotes = this.onChangeStocknotes.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    onChangeQuantity(e) {\r\n        e.preventDefault();\r\n        const quantity = e.target.value; \r\n\r\n        (quantity.length !== 0) ?\r\n        this.setState({ quantity: quantity }) : \r\n        this.setState({ quantity: \"\" });\r\n        \r\n        const isNumber = val => !isNaN(+val); \r\n        const resultN = isNumber(quantity);\r\n        const isZero = val => val && (+val > 0);\r\n        const resultZ = isZero(quantity);\r\n\r\n        if (!isNumber || !resultZ) {\r\n            return this.setState({\r\n                isErrorQty: true \r\n            });\r\n        } else {\r\n            return this.setState({\r\n                isErrorQty: false  \r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeAliquot(e) {\r\n        e.preventDefault();\r\n        const aliquot = e.target.value; \r\n\r\n        (aliquot.length !== 0) ?\r\n        this.setState({ aliquot: aliquot }) : \r\n        this.setState({ aliquot: \"\" }) \r\n\r\n        const minLength = len => val => val && (val.length >= len); \r\n        const result = minLength(5)(aliquot);\r\n        if (!result) {\r\n            return this.setState({\r\n                isErrorAliq: true \r\n            });\r\n        } else {\r\n            return this.setState({\r\n                isErrorAliq: false  \r\n            });\r\n        } \r\n    }\r\n\r\n    onChangeStocknotes(e) {\r\n        e.preventDefault();\r\n        const stocknotes = e.target.value; \r\n\r\n        (stocknotes.length !== 0) ?\r\n        this.setState({ stocknotes: stocknotes }) : \r\n        this.setState({ stocknotes: \"\" }) \r\n\r\n        const minLength = len => val => val && (val.length >= len); \r\n        const result = minLength(5)(stocknotes);\r\n        if (!result) {\r\n            return this.setState({\r\n                isErrorNotes: true \r\n            });\r\n        } else {\r\n            return this.setState({\r\n                isErrorNotes: false  \r\n            });\r\n        } \r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const i = this.props.item;           \r\n        const item_id = i._id; \r\n        let newDetails = {}\r\n        // let newDetails = {\r\n        //     item_id: item_id\r\n        // }\r\n\r\n        const quantity = this.state.quantity;\r\n        const updateqtydate = new Date().toISOString();\r\n        const updateqtyuser = this.props.auth.user.name;\r\n        if (quantity.length !== 0) {\r\n            newDetails.quantity = quantity;\r\n            newDetails.updateqtydate = updateqtydate;\r\n            newDetails.updateqtyuser = updateqtyuser; \r\n        }\r\n\r\n        const aliquot = this.state.aliquot;\r\n        const updatealiqdate = new Date().toISOString();\r\n        const updatealiquser = this.props.auth.user.name;\r\n        if (aliquot.length !== 0) {\r\n            newDetails.aliquot = aliquot;\r\n            newDetails.updatealiqdate = updatealiqdate;\r\n            newDetails.updatealiquser = updatealiquser; \r\n        }\r\n\r\n        const stocknotes = this.state.stocknotes;\r\n        const updatenotedate = new Date().toISOString();\r\n        const updatenoteuser = this.props.auth.user.name;\r\n\r\n        if (stocknotes.length !== 0) {\r\n            newDetails.stocknotes = stocknotes;\r\n            newDetails.updatenotedate = updatenotedate;\r\n            newDetails.updatenoteuser = updatenoteuser; \r\n        }\r\n\r\n        if (newDetails.length !== 0) {\r\n            newDetails.item_id = item_id; \r\n        //if ((quantity.length !== 0) || (aliquot.length !== 0) || (stocknotes.length !== 0)) {\r\n            alert('newDetails is ' + JSON.stringify(newDetails) ); \r\n            this.props.editDetails(newDetails);\r\n        }    \r\n        this.props.fetchInStock();\r\n        this.toggleModal();\r\n    }\r\n\r\n    render() {\r\n        let i = this.props.item;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil\" />\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Updating info of item:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{i.article}</h4>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"quantity\">New Quantity: </Label>\r\n                                <Input type=\"text\" name=\"quantity\" id=\"quantity\" \r\n                                    onChange={this.onChangeQuantity}\r\n                                    invalid={this.state.isErrorQty && this.state.quantity}\r\n                                />\r\n                                {(this.state.isErrorQty && this.state.quantity) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Must be a valid quantity | In case of zero, set as out of stock.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <FormGroup>\r\n                                <Label for=\"aliquot\">New Aliquot: </Label>\r\n                                <Input type=\"text\" name=\"aliquot\" id=\"aliquot\" \r\n                                    onChange={this.onChangeAliquot}\r\n                                    invalid={this.state.isErrorAliq && this.state.aliquot}\r\n                                />\r\n                                {(this.state.isErrorAliq && this.state.aliquot) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Must be at least 5 characters.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"stocknotes\">New Additional Notes: </Label>\r\n                                <Input type=\"text\" name=\"stocknotes\" id=\"stocknotes\" \r\n                                    onChange={this.onChangeStocknotes}\r\n                                    invalid={this.state.isErrorNotes && this.state.stocknotes}\r\n                                />\r\n                                {(this.state.isErrorNotes && this.state.stocknotes) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Must be at least 5 characters.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditStockForm));","import React, { Component } from \"react\";\r\nimport { Button, Card, CardText, CardBody, CardTitle, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\nimport Moment from \"react-moment\"; \r\nimport ImgComponent from \"./ImgComponent\";\r\n\r\nexport default class DetailsComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let i = this.props.item;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-search\" />  \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Details of item:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{i.article}</h4>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle><h5 className=\"text-info\">Quantity:</h5> {\" \"} {i.quantity} </CardTitle>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Updated by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.updateqtyuser}</div>\r\n                                        <div className=\"col\">\r\n                                            {i.updateqtydate ? (<Moment format=\"ll\">{i.updateqtydate}</Moment>) : (<div/>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle><h5 className=\"text-info\">Location:</h5> {\" \"} {i.location} {\" \"} <ImgComponent item={i} /></CardTitle>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Updated by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.updatelocuser}</div>\r\n                                        <div className=\"col\">\r\n                                            {i.updatelocdate ? (<Moment format=\"ll\">{i.updatelocdate}</Moment>) : (<div/>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle><h5 className=\"text-info\">Aliquot:</h5> {\" \"} {i.aliquot}</CardTitle>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Updated by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.updatealiquser}</div>\r\n                                        <div className=\"col\">\r\n                                            {i.updatealiqdate ? (<Moment format=\"ll\">{i.updatealiqdate}</Moment>) : (<div/>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle><h5 className=\"text-info\">Additional notes:</h5> {\" \"} {i.stocknotes}</CardTitle>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Updated by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.updatenoteuser}</div>\r\n                                        <div className=\"col\">\r\n                                            {i.updatenotedate ? (<Moment format=\"ll\">{i.updatenotedate}</Moment>) : (<div/>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Delivered by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.deliveryuser}</div>\r\n                                        <div className=\"col\"><Moment format=\"ll\">{i.deliverydate}</Moment></div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Purchased by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.orderuser}</div>\r\n                                        <div className=\"col\"><Moment format=\"ll\">{i.orderdate}</Moment></div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-info\">Requested by:</div>\r\n                                        <div className=\"col text-info\">On:</div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">{i.requestuser}</div>\r\n                                        <div className=\"col\"><Moment format=\"ll\">{i.requestdate}</Moment></div>\r\n                                    </div>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <br/>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Col, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { addOutStock, fetchInStock } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addOutStock: (formData) => (addOutStock(formData)),\r\n    fetchInStock: () => (fetchInStock()),\r\n};\r\n\r\nclass EditOutOfSTockForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            status: \"\",\r\n            isError: false \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen \r\n        });\r\n    }\r\n\r\n    onChangeStatus(event) {\r\n        event.preventDefault();\r\n        const status = event.target.value;\r\n        \r\n        (status.length !== 0) ?\r\n        this.setState({ status: status, isError: false }) : \r\n        this.setState({ status: \"\" }) \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.status) \r\n        {   \r\n            return this.setState({\r\n                isError: true \r\n            });\r\n        }\r\n\r\n        const item = this.props.item;\r\n        const itemId = item._id;\r\n\r\n        const status = this.state.status;\r\n        \r\n        const updateItem = {\r\n            item_id: itemId,  \r\n            category: status \r\n        };\r\n\r\n        this.props.addOutStock(updateItem);\r\n        this.props.fetchInStock();\r\n        this.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n        let i = this.props.item;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                <span className=\"text-info\">Out of Stock</span> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Setting as out of stock the item:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{i.article}</h4>\r\n                        {/* <h5 className=\"text-info\">{i.article}</h5> */}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"outofstock\">Confirm new status: </Label>\r\n                                <Col sm={10}>\r\n                                    <Input type=\"select\" name=\"outofstock\" id=\"outofstock\"\r\n                                        onChange={this.onChangeStatus}\r\n                                        invalid={this.state.isError && !this.state.status}\r\n                                    >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"outofstock\">Out of Stock</option>\r\n                                    </Input>\r\n                                </Col>\r\n                                {(this.state.isError && !this.state.status) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">New status is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditOutOfSTockForm));","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\n\r\nimport { editLocation, fetchInStock } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        lastId: state.lastId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    editLocation: (instock) => (editLocation(instock)),\r\n    fetchInStock: () => (fetchInStock())\r\n};\r\n\r\nclass EditLocation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isError: false, \r\n            imgdata: \"\",\r\n            location: \"\"\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.props.fetchLastInstock();\r\n    // }\r\n\r\n    onChangeLocation(e) {\r\n        e.preventDefault();\r\n        const location = e.target.value; \r\n\r\n        (location.length !== 0) ?\r\n        this.setState({ location: location }) : \r\n        this.setState({ location: \"\" }) \r\n    }\r\n\r\n    onFileChange(e) {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        \r\n        (!file || file.type !== 'image/jpeg' \r\n            // || file.type !== 'image/apng' ||\r\n            // file.type !== 'image/apng' || file.type !== 'image/avif' || \r\n            // file.type !== 'image/gif' || file.type !== 'image/png' || \r\n            // file.type !== 'image/svg+xml'  \r\n        ) ? \r\n        this.setState({ imgdata: \"\" }) :\r\n        this.setState({ imgdata: file })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.location || !this.state.imgdata ) \r\n        {   \r\n            return this.setState({\r\n                isError: true \r\n            });\r\n        }\r\n\r\n        let i = this.props.item;            \r\n\r\n        const item_id = i._id; \r\n        const location = this.state.location;\r\n        const updatelocdate = new Date().toISOString();\r\n        const updatelocuser = this.props.auth.user.name;\r\n        const imgdata = this.state.imgdata;\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('item_id', item_id); \r\n        formData.append('location', location); \r\n        formData.append('imgdata', imgdata);\r\n        formData.append('updatelocdate', updatelocdate); \r\n        formData.append('updatelocuser', updatelocuser);  \r\n\r\n        this.props.editLocation(formData);\r\n        this.props.fetchInStock();\r\n        this.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n        let i = this.props.item;\r\n\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil\" /> \r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Update location of:\r\n                        <hr/>\r\n                        <h4 className=\"text-primary\">{i.article}</h4>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"location\">Location: </Label>\r\n                                <Input type=\"text\" name=\"location\" id=\"location\" \r\n                                    value={this.state.location} onChange={this.onChangeLocation}\r\n                                    invalid={this.state.isError && !this.state.location}\r\n                                />\r\n                                {(this.state.isError && !this.state.location) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Location description is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}            \r\n                            </FormGroup>    \r\n                            <FormGroup>\r\n                                <Label for=\"imgdata\">Upload photo as evidence of location: </Label>\r\n                                <Input type=\"file\" name=\"imgdata\" id=\"imgdata\" \r\n                                    onChange={this.onFileChange} \r\n                                />\r\n                                {(this.state.isError && !this.state.imgdata) ? (\r\n                                    <div>\r\n                                        <p className=\"text-danger\">Photo of location is required.</p>\r\n                                    </div>    \r\n                                ) : ( <div /> )}\r\n                            </FormGroup>\r\n                            <br/>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button> \r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditLocation));","import React, { Component } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editLocation, fetchInStock } from \"../actions/ActionCreators\";\r\n\r\nimport PdfComponent from \"./PdfComponent\";\r\nimport ImgComponent from \"./ImgComponent\";\r\nimport EditStockForm from \"./EditStockForm\";\r\nimport DetailsComponent from \"./DetailsComponent\";\r\nimport EditOutOfSTockForm from \"./EditOutOfStockForm\";\r\nimport EditLocation from \"./EditLocation\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        auth: state.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    editLocation: (instock) => (editLocation(instock)),\r\n    fetchInStock: () => (fetchInStock())\r\n};\r\n\r\nclass InStockTableRow extends Component {\r\n    render() {\r\n        let i = this.props.item; \r\n\r\n        return(\r\n            <tr>\r\n                <td> {i.id} </td>\r\n                <td> {i.article} </td>\r\n                <td> {i.quantity} </td>\r\n                <td>\r\n                    <PdfComponent item={i} />  \r\n                </td>\r\n                <td>\r\n                    <DetailsComponent item={i} />\r\n                </td>                \r\n                <td>\r\n                    <EditStockForm auth={ this.props.auth } item={i}/>\r\n                </td>                \r\n                <td> {i.location} </td>\r\n                <td>\r\n                    <ImgComponent item={i} />  \r\n                </td>\r\n                <td>\r\n                    <EditLocation auth={ this.props.auth } item={i}/>\r\n                </td>\r\n                <td>\r\n                    <EditOutOfSTockForm item={i} />  \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(InStockTableRow));","import React, { Component } from \"react\";\r\nimport InStockTableRow from \"./InStockTableRow\";\r\n\r\nimport { fetchInStock, addInStock , deleteInStock } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { NoItemsComponent } from \"./NoItemsComponent\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        instock: state.instock  \r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = {\r\n    fetchInStock: () => (fetchInStock()),\r\n    addInStock: (stock) => (addInStock(stock)),\r\n    deleteInStock: (oldInstockId) => (deleteInStock(oldInstockId))\r\n};\r\n\r\nclass InStockTable extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchInStock();\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.props.instock.isLoading) {\r\n            return <Loading />\r\n        }\r\n        \r\n        if (this.props.instock.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-3 text-center\">\r\n                            <h4> { this.props.instock.errMess } </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <table className=\"table table-sm table-striped table-boredered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"12\" className=\"bg-secondary text-white text-center h4 p-2\">\r\n                                ITEMS IN STOCK    \r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Article</th>\r\n                            <th>Qty now</th> \r\n                            <th></th>\r\n                            <th>Details</th>  \r\n                            <th>Edit Details</th> \r\n                            <th>Location</th>\r\n                            <th></th> \r\n                            <th>Edit Location</th> \r\n                            <th></th> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {   \r\n                            this.props.instock.instock\r\n                                .map(item => \r\n                                    <InStockTableRow item={ item }\r\n                                        key={ item.id }  \r\n                                        auth={ this.props.auth }\r\n                                    />)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    (this.props.instock.instock.length === 0) ? (<NoItemsComponent />) : ( <div />)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(InStockTable));","import React, { Component } from \"react\";\r\nimport PdfComponent from \"./PdfComponent\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport class OutOfStockTableRow extends Component {\r\n    render() {\r\n        let i = this.props.item;\r\n\r\n        return(\r\n            <tr>\r\n                <td> {i.id} </td>\r\n                <td> {i.article} </td>\r\n                <td> {i.index} </td>\r\n                <td> <Moment format=\"ll\">{i.orderdate}</Moment></td>\r\n                <td> {i.orderuser} </td>\r\n                <td> <Moment format=\"ll\">{i.deliverydate}</Moment></td>\r\n                <td> {i.deliveryuser} </td>\r\n                <td>\r\n                    <PdfComponent item={i} />  \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { OutOfStockTableRow } from \"./OutOfStockTableRow\";\r\n\r\nimport { fetchOutStock, addOutStock } from \"../actions/ActionCreators\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { NoItemsComponent } from \"./NoItemsComponent\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        outstock: state.outstock  \r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = {\r\n    fetchOutStock: () => (fetchOutStock()),\r\n    addOutStock: (stock) => (addOutStock(stock)),\r\n};\r\n\r\nclass OutOfStockTable extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchOutStock();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.outstock.isLoading) {\r\n            return <Loading />\r\n        }\r\n        \r\n        if (this.props.outstock.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-3 text-center\">\r\n                            <h4> { this.props.outstock.errMess } </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <table className=\"table table-sm table-striped table-boredered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"12\" className=\"bg-secondary text-white text-center h4 p-2\">\r\n                                ITEMS OUT OF STOCK     \r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Article</th>\r\n                            <th>Index</th>\r\n                            <th>Purchased on</th>\r\n                            <th>Ordered by</th>\r\n                            <th>Delivered on</th>\r\n                            <th>Delivered by</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {   \r\n                            this.props.outstock.outstock\r\n                                .map(item => \r\n                                    <OutOfStockTableRow item={ item }\r\n                                        key={ item.id }  \r\n                                    />)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    (this.props.outstock.outstock.length === 0) ? (<NoItemsComponent />) : ( <div />)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutOfStockTable));","import React, { Component } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\r\n\r\nexport class StatsComponent extends Component {\r\n\r\n    COLORS = [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"];\r\n\r\n    pieData = [\r\n        {\r\n            \"name\": \"ACME XYZ.n Polyclonal Antibody\",\r\n            \"value\": 38.85\r\n        },\r\n        {\r\n            \"name\": \"Histone H2C.y Polyclonal Antibody\",\r\n            \"value\": 17.91\r\n        },\r\n        {\r\n            \"name\": \"ACME ABC.w Fluo Marker\",\r\n            \"value\": 16.85\r\n        },\r\n        {\r\n            \"name\": \"Tungsten Carbide Beads, 3 mm (200)\",\r\n            \"value\": 16.14\r\n        },\r\n        {\r\n            \"name\": \"Others\",\r\n            \"value\": 10.25\r\n        }\r\n    ];\r\n\r\n    CustomTooltip = ({ active, payload, label }) => {\r\n        if (active) {\r\n            return (\r\n                <div className=\"custom-tooltip\" style={{ backgroundColor: '#ffff', padding: '5px', border: '1px solid #cccc' }}>\r\n                    <label>{`${payload[0].name} : ${payload[0].value}%`}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col-6 justify-content-center\">\r\n                        <h1>Stats on the inventory</h1>\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col-6 justify-content-center\">\r\n                        <br />\r\n                        <h2>Annual expenditures: </h2>\r\n                        <br />\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col\">\r\n                        <PieChart width={730} height={300}>\r\n                            <Pie data={this.pieData} color=\"#000000\" dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={120} fill=\"#8884d8\" >\r\n                                {\r\n                                    this.pieData.map((entry, index) => <Cell key={`cell-${index}`} fill={this.COLORS[index % this.COLORS.length]} />)\r\n                                }\r\n                            </Pie>\r\n                            <Tooltip content={<this.CustomTooltip />} />\r\n                            <Legend />\r\n                        </PieChart>                        \r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div>\r\n                    <br />\r\n                    <hr />\r\n                </div>\r\n                <div>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n \r\n\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardText, CardBody, CardTitle } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col\">\r\n                  <br/>\r\n                  <br/>\r\n              </div>\r\n          </div>\r\n          <div className=\"row justify-content-md-center\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col-md-8\">\r\n                <Card>\r\n                  <CardBody>\r\n                    <CardTitle>\r\n                    <h2>\r\n                      <b>Demo version </b> of the inventory application\r\n                    </h2>\r\n                    </CardTitle>\r\n                    <CardText>\r\n                      <p className=\"flow-text grey-text text-darken-1\">\r\n                        Access via web and through your browser start managing your inventory\r\n                      </p>\r\n                      <br />\r\n                    </CardText>\r\n                    <div className=\"row\">\r\n                      <div className=\"col s6\">\r\n                        <Link\r\n                          to=\"/register\"\r\n                          style={{\r\n                            width: \"140px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\"\r\n                          }}\r\n                          className=\"btn btn-large btn-outline-info\"\r\n                        >\r\n                          Register\r\n                        </Link>\r\n                      </div>\r\n                      <div />\r\n                      <div className=\"col s6\">\r\n                        <Link\r\n                          to=\"/login\"\r\n                          style={{\r\n                            width: \"140px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\"\r\n                          }}\r\n                          className=\"btn btn-large btn-outline-info\"\r\n                        >\r\n                          Log in \r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </CardBody>  \r\n                </Card>\r\n            </div>\r\n            <div className=\"col\"></div>\r\n          </div>\r\n          <div className=\"row\">\r\n              <div className=\"col\">\r\n                  <br/>\r\n                  <br/>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardSubtitle, CardText, CardBody, CardTitle, Button } from \"reactstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/ActionCreators\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-sm-6 text-right\">\r\n            <br/>\r\n            <Link to=\"/\">\r\n              <i class=\"fa fa-arrow-circle-left fa-lg\">{\" \"}Back to info</i>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-sm-6\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle><h2><b>Register</b> below</h2></CardTitle>\r\n                    <CardSubtitle>\r\n                      <h5>Already have an account? <Link to=\"/login\">Log in</Link></h5>\r\n                    </CardSubtitle>\r\n                    <CardText>\r\n                      <form noValidate onSubmit={this.onSubmit}>\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n                          <label htmlFor=\"name\">Name</label><br/>\r\n                          <input\r\n                            onChange={this.onChange}\r\n                            value={this.state.name}\r\n                            error={errors.name}\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            className={classnames(\"\", {\r\n                              invalid: errors.name\r\n                            })}\r\n                          />\r\n                          {\" \"}<span className=\"text-danger\">{errors.name}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n                          <label htmlFor=\"email\">Email</label><br/>\r\n                          <input\r\n                            onChange={this.onChange}\r\n                            value={this.state.email}\r\n                            error={errors.email}\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            className={classnames(\"\", {\r\n                              invalid: errors.email\r\n                            })}\r\n                          /> \r\n                          {\" \"}<span className=\"text-danger\">{errors.email}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n                          <label htmlFor=\"password\">Password</label><br/>\r\n                          <input\r\n                            onChange={this.onChange}\r\n                            value={this.state.password}\r\n                            error={errors.password}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            className={classnames(\"\", {\r\n                              invalid: errors.password\r\n                            })}\r\n                          />\r\n                          {\" \"}<span className=\"text-danger\">{errors.password}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n                          <label htmlFor=\"password2\">Confirm Password</label><br/>\r\n                          <input\r\n                            onChange={this.onChange}\r\n                            value={this.state.password2}\r\n                            error={errors.password2}\r\n                            id=\"password2\"\r\n                            type=\"password\"\r\n                            className={classnames(\"\", {\r\n                              invalid: errors.password2\r\n                            })}\r\n                          />\r\n                          {\" \"}<span className=\"text-danger\">{errors.password2}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                          <Button className=\"btn-info\">Sign up</Button>\r\n                        </div>\r\n                      </form>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardSubtitle, CardText, CardBody, CardTitle, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/ActionCreators\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-sm-6 text-right\">\r\n            <br/>\r\n            <Link to=\"/\">\r\n              <i class=\"fa fa-arrow-circle-left fa-lg\">{\" \"}Back to info</i>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col-sm-6\">\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle><h2><b>Login</b> below</h2></CardTitle>\r\n                    <CardSubtitle>\r\n                      <h5>Don't have an account? <Link to=\"/register\">Register</Link></h5>\r\n                    </CardSubtitle>\r\n                    <CardText>\r\n                      <form noValidate onSubmit={this.onSubmit}>\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n                          <label htmlFor=\"email\">Email</label><br/>\r\n                          <input\r\n                            onChange={this.onChange}\r\n                            value={this.state.email}\r\n                            error={errors.email}\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            className={classnames(\"\", {\r\n                              invalid: errors.email || errors.emailnotfound\r\n                            })}\r\n                          />                          \r\n                          {\" \"}\r\n                          <span className=\"text-danger\">\r\n                            {errors.email}\r\n                            {errors.emailnotfound}\r\n                          </span>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n                          <label htmlFor=\"password\">Password</label><br/>  \r\n                          <input\r\n                            onChange={this.onChange}\r\n                            value={this.state.password}\r\n                            error={errors.password}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            className={classnames(\"\", {\r\n                              invalid: errors.password || errors.passwordincorrect\r\n                            })}\r\n                          />\r\n                          {\" \"}\r\n                          <span className=\"text-danger\">\r\n                            {errors.password}\r\n                            {errors.passwordincorrect}\r\n                          </span>\r\n                        </div>\r\n                        <br/>\r\n                        <br/>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                          <Button className=\"btn-info\">Login</Button>\r\n                        </div>\r\n                      </form>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","export default __webpack_public_path__ + \"static/media/dashboard_background.693c7141.JPG\";","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/ActionCreators\";\r\n\r\nimport imageUrl from \"../../assets/images/dashboard_background.JPG\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <br/>\r\n                        <br/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-1 col-xs-4\"></div>\r\n                    <div className=\"col-sm-4\">\r\n                        <h2 className=\"text-color-grey\"><b>Hey there,</b> {user.name.split(\" \")[0]}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4\"></div>\r\n                    <div className=\"col\">\r\n                        <img src={imageUrl} />\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col-sm-9\">\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\"></div>\r\n                    <div className=\"col-sm-9 text-center\">\r\n                        <Button outline onClick={this.onLogoutClick}>Logout</Button>\r\n                    </div>\r\n                    <div className=\"col\"></div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);\r\n\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\n\r\nimport RequestTable from \"./RequestTable\";\r\nimport OrderTable from \"./OrderTable\";\r\nimport InStockTable from \"./InStockTable\";\r\nimport OutOfStockTable from \"./OutOfStockTable\";\r\nimport { StatsComponent } from \"./StatsComponent\";\r\n//import { HomeComponent } from \"./HomeComponent\";\r\n\r\nimport { logoutUser } from \"../actions/ActionCreators\";\r\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Landing from \"../components/layout/Landing\";\r\nimport Register from \"../components/auth/Register\";\r\nimport Login from \"../components/auth/Login\";\r\nimport Dashboard from \"../components/dashboard/Dashboard\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logoutUser: () => (logoutUser())\r\n};\r\n\r\nclass Main extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header auth={this.props.auth} logoutUser={this.props.logoutUser} />\r\n        <br />\r\n        { this.props.auth.isAuthenticated === true ? \r\n          (\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Dashboard} />\r\n              <Route exact path=\"/requests\" component={RequestTable} />\r\n              <Route exact path=\"/orders\" component={OrderTable} />\r\n              <Route exact path=\"/instock\" component={InStockTable} />\r\n              <Route exact path=\"/outofstock\" component={OutOfStockTable} />\r\n              <Route exact path=\"/stats\" component={StatsComponent} />\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          ) \r\n          : \r\n          (\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Landing} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n            </Switch>\r\n          )\r\n        }\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { setCurrentUser, logoutUser } from \"./actions/ActionCreators\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";  \r\nimport './App.css';\r\n\r\nimport Main from \"./components/MainComponent\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Main />\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport \"@fontsource/pangolin\";\nimport \"@fontsource/playfair-display\";\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}